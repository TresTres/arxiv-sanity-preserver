{
  "service": {
    "service": "asp2",
    "serviceObject": {
      "name": "asp2"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "stage": "dev",
      "region": "us-east-2",
      "role": "arn:aws:iam::555989344246:role/asp2_role",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ClearUnderscorebucketsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/asp2-dev-clear_buckets"
            }
          },
          "FetchUnderscoreentryUnderscoredataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/asp2-dev-fetch_entry_data"
            }
          },
          "ProcessUnderscorestreamLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/asp2-dev-process_stream"
            }
          },
          "ExtractUnderscoretextLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/asp2-dev-extract_text"
            }
          },
          "ExtractUnderscoredoneLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/asp2-dev-extract_done"
            }
          },
          "ClearUnderscorebucketsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
              },
              "FunctionName": "asp2-dev-clear_buckets",
              "Handler": "lambdas/clear_buckets.main",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::555989344246:role/asp2_role",
              "Runtime": "python3.8",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "FILE_BUCKET": "asp2-article-bucket",
                  "TEXT_BUCKET": "asp2-textract-bucket"
                }
              }
            },
            "DependsOn": [
              "ClearUnderscorebucketsLogGroup"
            ]
          },
          "ClearUnderscorebucketsLambdaVersionP0mFH9UcjaG0f8M0Zykz9bkKWo86CrApR6rDaYMDYtY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ClearUnderscorebucketsLambdaFunction"
              },
              "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
            }
          },
          "FetchUnderscoreentryUnderscoredataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
              },
              "FunctionName": "asp2-dev-fetch_entry_data",
              "Handler": "lambdas/fetch_entry_data.main",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::555989344246:role/asp2_role",
              "Runtime": "python3.8",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "TABLE_NAME": "asp2-fetch-results"
                }
              }
            },
            "DependsOn": [
              "FetchUnderscoreentryUnderscoredataLogGroup"
            ]
          },
          "FetchUnderscoreentryUnderscoredataLambdaVersion9lZ4BcvlxXC95mtFtCdBUjtMBch0unVDW9tNuYhL0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FetchUnderscoreentryUnderscoredataLambdaFunction"
              },
              "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
            }
          },
          "ProcessUnderscorestreamLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
              },
              "FunctionName": "asp2-dev-process_stream",
              "Handler": "lambdas/process_stream.main",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::555989344246:role/asp2_role",
              "Runtime": "python3.8",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "BUCKET_NAME": "asp2-article-bucket"
                }
              }
            },
            "DependsOn": [
              "ProcessUnderscorestreamLogGroup",
              "dynamoDBInstance"
            ]
          },
          "ProcessUnderscorestreamLambdaVersionrEW6kIu1HEArWew36RZZZ6NFwJXeVFP2N6MzEGs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProcessUnderscorestreamLambdaFunction"
              },
              "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
            }
          },
          "ExtractUnderscoretextLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
              },
              "FunctionName": "asp2-dev-extract_text",
              "Handler": "lambdas/extract_text.main",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::555989344246:role/asp2_role",
              "Runtime": "python3.8",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "SNS_ARN": {
                    "Ref": "snsTopic"
                  },
                  "ROLE_ARN": "arn:aws:iam::555989344246:role/asp2_role",
                  "OUTPUT_BUCKET": "asp2-textract-bucket"
                }
              }
            },
            "DependsOn": [
              "ExtractUnderscoretextLogGroup"
            ]
          },
          "ExtractUnderscoretextLambdaVersionPafGT5HWki8u7ePVQF9po2XZDPwPPySZ0NmZ9vZQZC4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ExtractUnderscoretextLambdaFunction"
              },
              "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
            }
          },
          "ExtractUnderscoredoneLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
              },
              "FunctionName": "asp2-dev-extract_done",
              "Handler": "lambdas/extract_done.main",
              "MemorySize": 1024,
              "Role": "arn:aws:iam::555989344246:role/asp2_role",
              "Runtime": "python3.8",
              "Timeout": 6
            },
            "DependsOn": [
              "ExtractUnderscoredoneLogGroup"
            ]
          },
          "ExtractUnderscoredoneLambdaVersionbJih2YioNidQ4z32OXgoZ6DkcCjjMknazkoI3msOfus": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ExtractUnderscoredoneLambdaFunction"
              },
              "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
            }
          },
          "ExtractUnderscoretextCustomS31": {
            "Type": "Custom::S3",
            "Version": 1,
            "DependsOn": [
              "ExtractUnderscoretextLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": {
                "Fn::GetAtt": [
                  "CustomDashresourceDashexistingDashs3LambdaFunction",
                  "Arn"
                ]
              },
              "FunctionName": "asp2-dev-extract_text",
              "BucketName": "asp2-article-bucket",
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Rules": [
                    {
                      "Prefix": "pdf/"
                    },
                    {
                      "Suffix": ".pdf"
                    }
                  ]
                }
              ]
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "asp2",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              "asp2-article-bucket"
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/custom-resources.zip"
              },
              "FunctionName": "asp2-dev-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs12.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution"
            ]
          },
          "Asp2textractToExtractUnderscoredoneDLQPolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Id": "Asp2textractToExtractUnderscoredoneDLQPolicy",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "sns.amazonaws.com"
                    },
                    "Action": "sqs:SendMessage",
                    "Resource": {
                      "Fn::GetAtt": [
                        "deadLetterQueue",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Ref": "snsTopic"
                        }
                      }
                    }
                  }
                ]
              },
              "Queues": [
                {
                  "Ref": "deadLetterQueue"
                }
              ]
            }
          },
          "ExtractUnderscoredoneSnsSubscriptionAsp2textract": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Ref": "snsTopic"
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "ExtractUnderscoredoneLambdaFunction",
                  "Arn"
                ]
              },
              "RedrivePolicy": {
                "deadLetterTargetArn": {
                  "Fn::GetAtt": [
                    "deadLetterQueue",
                    "Arn"
                  ]
                }
              }
            }
          },
          "ExtractUnderscoredoneLambdaPermissionAsp2textractSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ExtractUnderscoredoneLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Ref": "snsTopic"
              }
            }
          },
          "ProcessUnderscorestreamEventSourceMappingDynamodbDynamoDBInstance": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [],
            "Properties": {
              "BatchSize": 100,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "dynamoDBInstance",
                  "StreamArn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProcessUnderscorestreamLambdaFunction",
                  "Arn"
                ]
              },
              "StartingPosition": "LATEST",
              "Enabled": true,
              "MaximumRetryAttempts": 1
            }
          },
          "dynamoDBInstance": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "asp2-fetch-results",
              "BillingMode": "PAY_PER_REQUEST",
              "KeySchema": [
                {
                  "AttributeName": "rawid",
                  "KeyType": "HASH"
                }
              ],
              "AttributeDefinitions": [
                {
                  "AttributeName": "rawid",
                  "AttributeType": "S"
                }
              ],
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              }
            }
          },
          "articleBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "asp2-article-bucket",
              "AccessControl": "Private",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          },
          "textractBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "asp2-textract-bucket",
              "AccessControl": "Private",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          },
          "fullBucketPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyName": "FullBucketPolicy",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": "s3:*",
                    "Resource": [
                      {
                        "Fn::GetAtt": [
                          "articleBucket",
                          "Arn"
                        ]
                      },
                      {
                        "Fn::GetAtt": [
                          "textractBucket",
                          "Arn"
                        ]
                      }
                    ]
                  }
                ]
              },
              "Roles": [
                "asp2_role"
              ]
            }
          },
          "snsTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": "asp2-textract",
              "TopicName": "asp2-textract"
            }
          },
          "deadLetterQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "asp2-dead-queue"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "ClearUnderscorebucketsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ClearUnderscorebucketsLambdaVersionP0mFH9UcjaG0f8M0Zykz9bkKWo86CrApR6rDaYMDYtY"
            }
          },
          "FetchUnderscoreentryUnderscoredataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FetchUnderscoreentryUnderscoredataLambdaVersion9lZ4BcvlxXC95mtFtCdBUjtMBch0unVDW9tNuYhL0"
            }
          },
          "ProcessUnderscorestreamLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProcessUnderscorestreamLambdaVersionrEW6kIu1HEArWew36RZZZ6NFwJXeVFP2N6MzEGs"
            }
          },
          "ExtractUnderscoretextLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ExtractUnderscoretextLambdaVersionPafGT5HWki8u7ePVQF9po2XZDPwPPySZ0NmZ9vZQZC4"
            }
          },
          "ExtractUnderscoredoneLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ExtractUnderscoredoneLambdaVersionbJih2YioNidQ4z32OXgoZ6DkcCjjMknazkoI3msOfus"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "dockerizePip": "non-linux"
      },
      "stage": "dev",
      "region": "us-east-2",
      "resourceNames": {
        "s3ArticleBucket": "asp2-article-bucket",
        "s3TextractBucket": "asp2-textract-bucket",
        "snsTextractTopic": "asp2-textract",
        "dynamoTable": "asp2-fetch-results",
        "sqsDead": "asp2-dead-queue"
      },
      "ARNs": {
        "snsTextractTopic": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ExtractUnderscoretextLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"SNS_ARN\"]"
        },
        "s3ArticleBucket": {
          "Ref": "s3ArticleBucket"
        },
        "dynamoTable": {
          "Ref": "dynamoDBInstance"
        },
        "dynamoStream": {
          "Fn::GetAtt": [
            "dynamoDBInstance",
            "StreamArn"
          ]
        }
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "clear_buckets": {
        "handler": "lambdas/clear_buckets.main",
        "environment": {
          "FILE_BUCKET": "asp2-article-bucket",
          "TEXT_BUCKET": "asp2-textract-bucket"
        },
        "events": [],
        "name": "asp2-dev-clear_buckets",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "ClearUnderscorebucketsLambdaVersionP0mFH9UcjaG0f8M0Zykz9bkKWo86CrApR6rDaYMDYtY"
      },
      "fetch_entry_data": {
        "handler": "lambdas/fetch_entry_data.main",
        "environment": {
          "TABLE_NAME": "asp2-fetch-results"
        },
        "events": [],
        "name": "asp2-dev-fetch_entry_data",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "FetchUnderscoreentryUnderscoredataLambdaVersion9lZ4BcvlxXC95mtFtCdBUjtMBch0unVDW9tNuYhL0"
      },
      "process_stream": {
        "handler": "lambdas/process_stream.main",
        "dependsOn": [
          "dynamoDBInstance"
        ],
        "events": [
          {
            "stream": {
              "type": "dynamodb",
              "arn": {
                "$ref": "$[\"service\"][\"custom\"][\"ARNs\"][\"dynamoStream\"]"
              },
              "batchSize": 100,
              "startingPosition": "LATEST",
              "maximumRetryAttempts": 1,
              "enabled": true
            }
          }
        ],
        "environment": {
          "BUCKET_NAME": "asp2-article-bucket"
        },
        "name": "asp2-dev-process_stream",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "ProcessUnderscorestreamLambdaVersionrEW6kIu1HEArWew36RZZZ6NFwJXeVFP2N6MzEGs"
      },
      "extract_text": {
        "handler": "lambdas/extract_text.main",
        "events": [
          {
            "s3": {
              "bucket": "asp2-article-bucket",
              "event": "s3:ObjectCreated:*",
              "rules": [
                {
                  "prefix": "pdf/"
                },
                {
                  "suffix": ".pdf"
                }
              ],
              "existing": true
            }
          }
        ],
        "environment": {
          "SNS_ARN": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ExtractUnderscoretextLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"SNS_ARN\"]"
          },
          "ROLE_ARN": "arn:aws:iam::555989344246:role/asp2_role",
          "OUTPUT_BUCKET": "asp2-textract-bucket"
        },
        "name": "asp2-dev-extract_text",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "ExtractUnderscoretextLambdaVersionPafGT5HWki8u7ePVQF9po2XZDPwPPySZ0NmZ9vZQZC4"
      },
      "extract_done": {
        "handler": "lambdas/extract_done.main",
        "events": [
          {
            "sns": {
              "arn": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"Asp2textractToExtractUnderscoredoneDLQPolicy\"][\"Properties\"][\"PolicyDocument\"][\"Statement\"][0][\"Condition\"][\"ArnEquals\"][\"aws:SourceArn\"]"
              },
              "topicName": "asp2-textract",
              "redrivePolicy": {
                "deadLetterTargetRef": "deadLetterQueue"
              }
            }
          }
        ],
        "name": "asp2-dev-extract_done",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "ExtractUnderscoredoneLambdaVersionbJih2YioNidQ4z32OXgoZ6DkcCjjMknazkoI3msOfus"
      }
    },
    "resources": {
      "Resources": {
        "dynamoDBInstance": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "asp2-fetch-results",
            "BillingMode": "PAY_PER_REQUEST",
            "KeySchema": [
              {
                "AttributeName": "rawid",
                "KeyType": "HASH"
              }
            ],
            "AttributeDefinitions": [
              {
                "AttributeName": "rawid",
                "AttributeType": "S"
              }
            ],
            "StreamSpecification": {
              "StreamViewType": "NEW_AND_OLD_IMAGES"
            }
          }
        },
        "articleBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "asp2-article-bucket",
            "AccessControl": "Private",
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            }
          }
        },
        "textractBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "asp2-textract-bucket",
            "AccessControl": "Private",
            "PublicAccessBlockConfiguration": {
              "BlockPublicAcls": true,
              "BlockPublicPolicy": true,
              "IgnorePublicAcls": true,
              "RestrictPublicBuckets": true
            }
          }
        },
        "fullBucketPolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
            "PolicyName": "FullBucketPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "articleBucket",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "textractBucket",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            },
            "Roles": [
              "asp2_role"
            ]
          }
        },
        "snsTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "DisplayName": "asp2-textract",
            "TopicName": "asp2-textract"
          }
        },
        "deadLetterQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "asp2-dead-queue"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "app": "asp2",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "app": "asp2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "exclude": [
          "test/**",
          "playground/**",
          "layers/**"
        ],
        "artifact": "/home/ezra20/Projects/arxiv-sanity-preserver/.serverless/asp2.zip",
        "artifactDirectoryName": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/ezra20/Projects/arxiv-sanity-preserver/.serverless/asp2.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z",
    "artifact": "asp2.zip"
  }
}