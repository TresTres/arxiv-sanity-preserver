{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ClearUnderscorebucketsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/asp2-dev-clear_buckets"
      }
    },
    "FetchUnderscoreentryUnderscoredataLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/asp2-dev-fetch_entry_data"
      }
    },
    "ProcessUnderscorestreamLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/asp2-dev-process_stream"
      }
    },
    "ExtractUnderscoretextLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/asp2-dev-extract_text"
      }
    },
    "ExtractUnderscoredoneLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/asp2-dev-extract_done"
      }
    },
    "ClearUnderscorebucketsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
        },
        "FunctionName": "asp2-dev-clear_buckets",
        "Handler": "lambdas/clear_buckets.main",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::555989344246:role/asp2_role",
        "Runtime": "python3.8",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "FILE_BUCKET": "asp2-article-bucket",
            "TEXT_BUCKET": "asp2-textract-bucket"
          }
        }
      },
      "DependsOn": [
        "ClearUnderscorebucketsLogGroup"
      ]
    },
    "ClearUnderscorebucketsLambdaVersionP0mFH9UcjaG0f8M0Zykz9bkKWo86CrApR6rDaYMDYtY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ClearUnderscorebucketsLambdaFunction"
        },
        "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
      }
    },
    "FetchUnderscoreentryUnderscoredataLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
        },
        "FunctionName": "asp2-dev-fetch_entry_data",
        "Handler": "lambdas/fetch_entry_data.main",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::555989344246:role/asp2_role",
        "Runtime": "python3.8",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "TABLE_NAME": "asp2-fetch-results"
          }
        }
      },
      "DependsOn": [
        "FetchUnderscoreentryUnderscoredataLogGroup"
      ]
    },
    "FetchUnderscoreentryUnderscoredataLambdaVersion9lZ4BcvlxXC95mtFtCdBUjtMBch0unVDW9tNuYhL0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FetchUnderscoreentryUnderscoredataLambdaFunction"
        },
        "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
      }
    },
    "ProcessUnderscorestreamLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
        },
        "FunctionName": "asp2-dev-process_stream",
        "Handler": "lambdas/process_stream.main",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::555989344246:role/asp2_role",
        "Runtime": "python3.8",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "BUCKET_NAME": "asp2-article-bucket"
          }
        }
      },
      "DependsOn": [
        "ProcessUnderscorestreamLogGroup",
        "dynamoDBInstance"
      ]
    },
    "ProcessUnderscorestreamLambdaVersionrEW6kIu1HEArWew36RZZZ6NFwJXeVFP2N6MzEGs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ProcessUnderscorestreamLambdaFunction"
        },
        "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
      }
    },
    "ExtractUnderscoretextLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
        },
        "FunctionName": "asp2-dev-extract_text",
        "Handler": "lambdas/extract_text.main",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::555989344246:role/asp2_role",
        "Runtime": "python3.8",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "SNS_ARN": {
              "Ref": "snsTopic"
            },
            "ROLE_ARN": "arn:aws:iam::555989344246:role/asp2_role",
            "OUTPUT_BUCKET": "asp2-textract-bucket"
          }
        }
      },
      "DependsOn": [
        "ExtractUnderscoretextLogGroup"
      ]
    },
    "ExtractUnderscoretextLambdaVersionPafGT5HWki8u7ePVQF9po2XZDPwPPySZ0NmZ9vZQZC4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ExtractUnderscoretextLambdaFunction"
        },
        "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
      }
    },
    "ExtractUnderscoredoneLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/asp2.zip"
        },
        "FunctionName": "asp2-dev-extract_done",
        "Handler": "lambdas/extract_done.main",
        "MemorySize": 1024,
        "Role": "arn:aws:iam::555989344246:role/asp2_role",
        "Runtime": "python3.8",
        "Timeout": 6
      },
      "DependsOn": [
        "ExtractUnderscoredoneLogGroup"
      ]
    },
    "ExtractUnderscoredoneLambdaVersionbJih2YioNidQ4z32OXgoZ6DkcCjjMknazkoI3msOfus": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ExtractUnderscoredoneLambdaFunction"
        },
        "CodeSha256": "aDX3TN+99o/I4KCFwI/4kUYf5h62YHhi7l7NFyAwSKc="
      }
    },
    "ExtractUnderscoretextCustomS31": {
      "Type": "Custom::S3",
      "Version": 1,
      "DependsOn": [
        "ExtractUnderscoretextLambdaFunction",
        "CustomDashresourceDashexistingDashs3LambdaFunction"
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashexistingDashs3LambdaFunction",
            "Arn"
          ]
        },
        "FunctionName": "asp2-dev-extract_text",
        "BucketName": "asp2-article-bucket",
        "BucketConfigs": [
          {
            "Event": "s3:ObjectCreated:*",
            "Rules": [
              {
                "Prefix": "pdf/"
              },
              {
                "Suffix": ".pdf"
              }
            ]
          }
        ]
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "asp2",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "s3",
                        "",
                        "",
                        "asp2-article-bucket"
                      ]
                    ]
                  },
                  "Action": [
                    "s3:PutBucketNotification",
                    "s3:GetBucketNotification"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "lambda",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "function",
                        "*"
                      ]
                    ]
                  },
                  "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashexistingDashs3LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/asp2/dev/1605822281737-2020-11-19T21:44:41.737Z/custom-resources.zip"
        },
        "FunctionName": "asp2-dev-custom-resource-existing-s3",
        "Handler": "s3/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs12.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    },
    "Asp2textractToExtractUnderscoredoneDLQPolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Id": "Asp2textractToExtractUnderscoredoneDLQPolicy",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Action": "sqs:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "deadLetterQueue",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "snsTopic"
                  }
                }
              }
            }
          ]
        },
        "Queues": [
          {
            "Ref": "deadLetterQueue"
          }
        ]
      }
    },
    "ExtractUnderscoredoneSnsSubscriptionAsp2textract": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "snsTopic"
        },
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": [
            "ExtractUnderscoredoneLambdaFunction",
            "Arn"
          ]
        },
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "deadLetterQueue",
              "Arn"
            ]
          }
        }
      }
    },
    "ExtractUnderscoredoneLambdaPermissionAsp2textractSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ExtractUnderscoredoneLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "snsTopic"
        }
      }
    },
    "ProcessUnderscorestreamEventSourceMappingDynamodbDynamoDBInstance": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [],
      "Properties": {
        "BatchSize": 100,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "dynamoDBInstance",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "ProcessUnderscorestreamLambdaFunction",
            "Arn"
          ]
        },
        "StartingPosition": "LATEST",
        "Enabled": true,
        "MaximumRetryAttempts": 1
      }
    },
    "dynamoDBInstance": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "asp2-fetch-results",
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "rawid",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "rawid",
            "AttributeType": "S"
          }
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        }
      }
    },
    "articleBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "asp2-article-bucket",
        "AccessControl": "Private",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "textractBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "asp2-textract-bucket",
        "AccessControl": "Private",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "fullBucketPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "FullBucketPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "articleBucket",
                    "Arn"
                  ]
                },
                {
                  "Fn::GetAtt": [
                    "textractBucket",
                    "Arn"
                  ]
                }
              ]
            }
          ]
        },
        "Roles": [
          "asp2_role"
        ]
      }
    },
    "snsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "asp2-textract",
        "TopicName": "asp2-textract"
      }
    },
    "deadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "asp2-dead-queue"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "ClearUnderscorebucketsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ClearUnderscorebucketsLambdaVersionP0mFH9UcjaG0f8M0Zykz9bkKWo86CrApR6rDaYMDYtY"
      }
    },
    "FetchUnderscoreentryUnderscoredataLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FetchUnderscoreentryUnderscoredataLambdaVersion9lZ4BcvlxXC95mtFtCdBUjtMBch0unVDW9tNuYhL0"
      }
    },
    "ProcessUnderscorestreamLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ProcessUnderscorestreamLambdaVersionrEW6kIu1HEArWew36RZZZ6NFwJXeVFP2N6MzEGs"
      }
    },
    "ExtractUnderscoretextLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ExtractUnderscoretextLambdaVersionPafGT5HWki8u7ePVQF9po2XZDPwPPySZ0NmZ9vZQZC4"
      }
    },
    "ExtractUnderscoredoneLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ExtractUnderscoredoneLambdaVersionbJih2YioNidQ4z32OXgoZ6DkcCjjMknazkoI3msOfus"
      }
    }
  }
}